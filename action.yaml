name: 'Empty PR Actions'

description: 'GitHub Actions that automatically creates an empty pull request linked to an issue'

branding:
  icon: 'git-pull-request'
  color: 'black'

inputs:
  issue_url:
    description: 'url of issue'
    required: false
    default: ${{ github.event.issue.issue_url }}
  
  issue_number:
    description: 'number of issue'
    required: false
    default: ${{ github.event.issue.number }}

  GITHUB_TOKEN:
    description: 'Github Token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Check Variables
      if: inputs.issue_url == '' && inputs.issue_number == ''
      shell: bash
      run: |
        echo "::error::issue can not be null"
        exit 1
    
    - id: get-issue
      shell: bash
      run: |
        issue_ref="${{ inputs.issue_url || inputs.issue_number }}"
        issue=$(gh issue view -R "$GITHUB_REPOSITORY" --json "number" --json "title" --json "assignees" $issue_ref)
        echo "number=$(echo $issue | jq -r '.number')" >> $GITHUB_OUTPUT
        echo "title=$(echo $issue | jq -r '.title')" >> $GITHUB_OUTPUT
        echo "login=$(echo $issue | jq -r '.assignees[0].login')" >> $GITHUB_OUTPUT

      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        
    - name: Move to path of action
      shell: bash
      run: |
        cd ${{ github.action_path }}
        pwd="$(pwd)"
        echo "local_action_path=$pwd" >> $GITHUB_ENV
      
    - id: cache-cargo
      uses: actions/cache@v3
      with:
        path: ${{ env.local_action_path }}/.cargo/bin/
        key: ${{ runner.os }}-cargo

    - name: Install dependencies
      if: steps.cache-cargo.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd ${{ github.action_path }}
        cargo install ccase

    - name: run
      shell: bash
      run: |
        chmod +x "${{ env.local_action_path }}/src/pull-request.sh"
        ${{ env.local_action_path }}/src/pull-request.sh -n "${{ steps.get-issue.outputs.number }}" -i "${{ steps.get-issue.outputs.title }}" -r $GITHUB_REPOSITORY -l "${{ steps.get-issue.outputs.login }}"
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
