# name: 'integration'

# on:
#   workflow_call:
#     inputs:
#       ref:
#         required: true
#         type: string
#       base_ref:
#         required: true
#         type: string

# jobs:
#   integration:
#     runs-on: ubuntu-latest

#     strategy:
#       max-parallel: 2
#       matrix:
#         python-version: [3.9]

#     steps:
#       - uses: actions/checkout@v3
#         with:
#           ref: ${{ inputs.ref }}

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ matrix.python-version }}
#           cache: 'pipenv'
#           cache-dependency-path: ./Pipfile.lock

#       - name: Install pipenv
#         run: |
#           python -m pip install --upgrade pipenv

#       - id: cache-pipenv
#         uses: actions/cache@v3
#         with:
#           path: ~/.local/share/virtualenvs
#           key: ${{ runner.os }}-integration-pipenv-${{ hashFiles('**/Pipfile.lock') }}

#       - name: Install dependencies
#         if: steps.cache-pipenv.outputs.cache-hit != 'true'
#         run: |
#           pipenv install --dev

#       - name: Lint
#         run: |
#           git fetch --depth 1 origin ${{ inputs.base_ref }}
#           pipenv run flake8 --append-config=setup.cfg
#           git diff --name-only origin/${{ inputs.base_ref }} | grep '\.py$' | xargs -r pipenv run pylint --rcfile=pylintrc
#           git diff --name-only origin/${{ inputs.base_ref }} | grep '\.py$' | xargs -r pipenv run mypy || pipenv run mypy

#       - name: Run unittest
#         run: |
#           cd src
#           pipenv run coverage run -m unittest main/tests/test_manage.py
#           pipenv run coverage xml

#       - name: Upload coverage to codeclimate
#         uses: paambaati/codeclimate-action@v3.2.0
#         env:
#           CC_TEST_REPORTER_ID: "${{ secrets.CC_TEST_REPORTER_ID }}"
#         with:
#           coverageLocations: ./src/coverage.xml:coverage.py
